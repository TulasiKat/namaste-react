Chapter 01 - Inception
Link to my Code
Theory -
● What is Emmet?
shorthand that transaled to multiole lines of html and css. shortcut basically
● Difference between a Library and Framework?
we can use library even in a asmall part of our web page. but framework requires a complete setup.
● What is CDN? Why do we use it?
fullform is content delivery network. for integrating react into projets, these cdn links can be an advantage.
● Why is React known as React?
● What is crossorigin in script tag?
we use this attribute when we are requesting the resource from some other domain.
● What is diference between React and ReactDOM
react is the core react and reasct dom is used for dom manipulations.
● What is difference between react.development.js and react.production.js files via CDN?
if we are just developing the project then we use the development.,js and if we are deploying the project, it requires much optimization and stuff . so we use production.js.
● What is async and defer? - see my Youtube video ;)
Coding -
● Set up all the tools in your laptop
○ VS Code
○ Chrome
○ Extensions of Chrome
● Create a new Git repo
● Build your first Hello World program using,
○ Using just HTML
○ Using JS to manipulate the DOM
○ Using React
■ use CDN Links
■ Create an Element
■ Create nested React Elements
■ Use root.render
● Push code to Github (Theory as well as code)
● Learn about Arrow Functions before the next class
References:
- https://beta.reactjs.org/apis/react/createElement
- https://www.youtube.com/watch?v=IrHmpdORLu8





#akshay's notes
Inception! ( Namaste-React ) 1
🚀
Inception! ( Namaste-React
)
💡 Please make sure to follow along with the whole ”Namaste
React" series, starting from Episode-1 and continuing
through each subsequent episode. The notes are designed
to provide detailed explanations of each concept along
with examples to ensure thorough understanding. Each
episode builds upon the knowledge gained from the
previous ones, so starting from the beginning will give
you a comprehensive understanding of React development.
💡 I've got a quick tip for you. To get the most out of
these notes, it's a good idea to watch Episode-1 first.
Understanding what ”Akshay” shares in the video will make
these notes way easier to understand. 
Inception! ( Namaste-React ) 2
So Let’s begin our Namaste React Journey
In this course we will study how the React
concepts are actually applied into the industry
i.e. into the real world projects.
So are you ready to fall in love with React????
Introducing React.
Q ) What is React? Why React is known as ‘React’?
React is a JavaScript Library. The name ‘React’ was chosen
because the library was designed to allow developers to react
to changes in state and data within an application, and to
update the user interface in a declarative and efficient
manner.
Q ) What is Library?
Library is a collections of prewritten code snippets that can
be used and reused to perform certain tasks. A particular
JavaScript library code can be plugged into application code
which leads to faster development and fewer vulnerabilities to
have errors.
Examples: React, jQuery
Q ) What is Framework?
Framework provides a basic foundation or structure for a
website or an application.
Inception! ( Namaste-React ) 3
Examples: Angular
Q ) Similarities between Library and Framework?
Frameworks and libraries are code written by third parties to
solve regular/common problems or to optimise performance.
Q ) Difference between Library and Framework?
A key difference between the two is Inversion of control. When
using a library, the control remains with the developer who
tells the application when to call library functions. When
using a framework, the control is reversed, which means that
the framework tells the developer where code needs to be
provided and calls it as it requires.
* Emmet:
Emmet is the essential toolkit for web-developers. It allows you
to type shortcuts that are then expanded into full-fledged
Inception! ( Namaste-React ) 4
boiler plate code for writing HTML and CSS.
Q ) Create Hello World Program using only HTML?
Q ) Create Hello World Program using only JavaScript?
Inception! ( Namaste-React ) 5
Q ) Create Hello World Program using only React?
* Cross Origin:
 The crossorigin attribute in the script tag enables CrossOrigin Resource Sharing (CORS) for loading external JavaScript
files from different origin than the hosting web page. This
allows the script to access resources from the server hosting
the script, such as making HTTP requests or accessing data.
Q ) What is {} denotes in above code?
Inception! ( Namaste-React ) 6
This (id='title'), classes, etc should come under {}. Whenever
I'm passing inside {}, will go as tag attributes of h1.
📢 NOTE: React will overwrite everything inside "root" and
replaces with whatever given inside render.
Q ) Do the below HTML code in React?
Inception! ( Namaste-React ) 7
To build the structure like this in React



#assignments
Chapter 02 - Assignment - Igniting our App
Please Note: Write the answers and code on your own while finishing your assignments. Try to
put down your thoughts into words by yourself in your own words. (This will help you develop
muscle memory and you will remember all the concepts properly) ✌
# Theory Assignment:
● - What is `NPM`?
● - What is `Parcel/Webpack`? Why do we need it?
● - What is `.parcel-cache`
● - What is `npx` ?
● - What is difference between `dependencies` vs `devDependencies`
● - What is Tree Shaking?
● - What is Hot Module Replacement?
● - List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
● - What is `.gitignore`? What should we add and not add into it?
● - What is the difference between `package.json` and `package-lock.json`
● - Why should I not modify `package-lock.json`?
● - What is `node_modules` ? Is it a good idea to push that on git?
● - What is the `dist` folder?
● - What is `browserlists`
Read about dif bundlers: vite, webpack, parcel
● Read about: ^ - caret and ~ - tilda
● Read about Script types in html (MDN Docs)
# Project Assignment:
- In your existing project
● - intialize `npm` into your repo
● - install `react` and `react-dom`
● - remove CDN links of react
● - install parcel
● - ignite your app with parcel
● - add scripts for “start” and “build” with parcel commands
● - add `.gitignore` file
● - add `browserlists`
● - build a production version of your code using `parcel build`
# References
● Creating your own create-react-app
● Parcel Documentation
● Parcel on Production
● BrowsersList: https://browserslist.dev/